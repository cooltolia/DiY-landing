// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$check-icon-name: 'check-icon';
$check-icon-x: 569px;
$check-icon-y: 206px;
$check-icon-offset-x: -569px;
$check-icon-offset-y: -206px;
$check-icon-width: 42px;
$check-icon-height: 33px;
$check-icon-total-width: 612px;
$check-icon-total-height: 531px;
$check-icon-image: '/app/images/sprite.png';
$check-icon: (569px, 206px, -569px, -206px, 42px, 33px, 612px, 531px, '/app/images/sprite.png', 'check-icon', );
$close-name: 'close';
$close-x: 569px;
$close-y: 240px;
$close-offset-x: -569px;
$close-offset-y: -240px;
$close-width: 10px;
$close-height: 11px;
$close-total-width: 612px;
$close-total-height: 531px;
$close-image: '/app/images/sprite.png';
$close: (569px, 240px, -569px, -240px, 10px, 11px, 612px, 531px, '/app/images/sprite.png', 'close', );
$feature-icon1-name: 'feature-icon1';
$feature-icon1-x: 203px;
$feature-icon1-y: 206px;
$feature-icon1-offset-x: -203px;
$feature-icon1-offset-y: -206px;
$feature-icon1-width: 121px;
$feature-icon1-height: 121px;
$feature-icon1-total-width: 612px;
$feature-icon1-total-height: 531px;
$feature-icon1-image: '/app/images/sprite.png';
$feature-icon1: (203px, 206px, -203px, -206px, 121px, 121px, 612px, 531px, '/app/images/sprite.png', 'feature-icon1', );
$feature-icon1-bg-name: 'feature-icon1_bg';
$feature-icon1-bg-x: 409px;
$feature-icon1-bg-y: 0px;
$feature-icon1-bg-offset-x: -409px;
$feature-icon1-bg-offset-y: 0px;
$feature-icon1-bg-width: 203px;
$feature-icon1-bg-height: 204px;
$feature-icon1-bg-total-width: 612px;
$feature-icon1-bg-total-height: 531px;
$feature-icon1-bg-image: '/app/images/sprite.png';
$feature-icon1-bg: (409px, 0px, -409px, 0px, 203px, 204px, 612px, 531px, '/app/images/sprite.png', 'feature-icon1_bg', );
$feature-icon2-name: 'feature-icon2';
$feature-icon2-x: 122px;
$feature-icon2-y: 410px;
$feature-icon2-offset-x: -122px;
$feature-icon2-offset-y: -410px;
$feature-icon2-width: 120px;
$feature-icon2-height: 121px;
$feature-icon2-total-width: 612px;
$feature-icon2-total-height: 531px;
$feature-icon2-image: '/app/images/sprite.png';
$feature-icon2: (122px, 410px, -122px, -410px, 120px, 121px, 612px, 531px, '/app/images/sprite.png', 'feature-icon2', );
$feature-icon2-bg-name: 'feature-icon2_bg';
$feature-icon2-bg-x: 0px;
$feature-icon2-bg-y: 206px;
$feature-icon2-bg-offset-x: 0px;
$feature-icon2-bg-offset-y: -206px;
$feature-icon2-bg-width: 202px;
$feature-icon2-bg-height: 203px;
$feature-icon2-bg-total-width: 612px;
$feature-icon2-bg-total-height: 531px;
$feature-icon2-bg-image: '/app/images/sprite.png';
$feature-icon2-bg: (0px, 206px, 0px, -206px, 202px, 203px, 612px, 531px, '/app/images/sprite.png', 'feature-icon2_bg', );
$feature-icon3-name: 'feature-icon3';
$feature-icon3-x: 447px;
$feature-icon3-y: 206px;
$feature-icon3-offset-x: -447px;
$feature-icon3-offset-y: -206px;
$feature-icon3-width: 121px;
$feature-icon3-height: 121px;
$feature-icon3-total-width: 612px;
$feature-icon3-total-height: 531px;
$feature-icon3-image: '/app/images/sprite.png';
$feature-icon3: (447px, 206px, -447px, -206px, 121px, 121px, 612px, 531px, '/app/images/sprite.png', 'feature-icon3', );
$feature-icon3-bg-name: 'feature-icon3_bg';
$feature-icon3-bg-x: 0px;
$feature-icon3-bg-y: 0px;
$feature-icon3-bg-offset-x: 0px;
$feature-icon3-bg-offset-y: 0px;
$feature-icon3-bg-width: 204px;
$feature-icon3-bg-height: 205px;
$feature-icon3-bg-total-width: 612px;
$feature-icon3-bg-total-height: 531px;
$feature-icon3-bg-image: '/app/images/sprite.png';
$feature-icon3-bg: (0px, 0px, 0px, 0px, 204px, 205px, 612px, 531px, '/app/images/sprite.png', 'feature-icon3_bg', );
$feature-icon4-name: 'feature-icon4';
$feature-icon4-x: 325px;
$feature-icon4-y: 206px;
$feature-icon4-offset-x: -325px;
$feature-icon4-offset-y: -206px;
$feature-icon4-width: 121px;
$feature-icon4-height: 121px;
$feature-icon4-total-width: 612px;
$feature-icon4-total-height: 531px;
$feature-icon4-image: '/app/images/sprite.png';
$feature-icon4: (325px, 206px, -325px, -206px, 121px, 121px, 612px, 531px, '/app/images/sprite.png', 'feature-icon4', );
$feature-icon4-bg-name: 'feature-icon4_bg';
$feature-icon4-bg-x: 205px;
$feature-icon4-bg-y: 0px;
$feature-icon4-bg-offset-x: -205px;
$feature-icon4-bg-offset-y: 0px;
$feature-icon4-bg-width: 203px;
$feature-icon4-bg-height: 205px;
$feature-icon4-bg-total-width: 612px;
$feature-icon4-bg-total-height: 531px;
$feature-icon4-bg-image: '/app/images/sprite.png';
$feature-icon4-bg: (205px, 0px, -205px, 0px, 203px, 205px, 612px, 531px, '/app/images/sprite.png', 'feature-icon4_bg', );
$feature-icon5-name: 'feature-icon5';
$feature-icon5-x: 0px;
$feature-icon5-y: 410px;
$feature-icon5-offset-x: 0px;
$feature-icon5-offset-y: -410px;
$feature-icon5-width: 121px;
$feature-icon5-height: 121px;
$feature-icon5-total-width: 612px;
$feature-icon5-total-height: 531px;
$feature-icon5-image: '/app/images/sprite.png';
$feature-icon5: (0px, 410px, 0px, -410px, 121px, 121px, 612px, 531px, '/app/images/sprite.png', 'feature-icon5', );
$spritesheet-width: 612px;
$spritesheet-height: 531px;
$spritesheet-image: '/app/images/sprite.png';
$spritesheet-sprites: ($check-icon, $close, $feature-icon1, $feature-icon1-bg, $feature-icon2, $feature-icon2-bg, $feature-icon3, $feature-icon3-bg, $feature-icon4, $feature-icon4-bg, $feature-icon5, );
$spritesheet: (612px, 531px, '/app/images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
